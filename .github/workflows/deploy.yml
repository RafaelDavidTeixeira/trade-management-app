name: Deploy to GitHub Pages

on:
  push:
    branches:
      - main # Dispara o workflow quando há um push na branch 'main'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest # Usa o ambiente Ubuntu mais recente para rodar os passos

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20' # Verifique se esta versão corresponde à sua local
        cache: 'npm'

    - name: Clear npm cache and force install dependencies
      run: |
        npm cache clean --force
        npm install --force

    # --- INÍCIO DA CORREÇÃO DEFINITIVA DE PERMISSÕES ---
    - name: Grant execute permissions to node_modules binaries
      run: chmod -R +x node_modules/.bin/

    - name: Grant execute permissions to esbuild binary
      run: chmod +x node_modules/@esbuild/linux-x64/bin/esbuild # AGORA ESTA LINHA SERÁ EFICAZ!
    # --- FIM DA CORREÇÃO DEFINITIVA ---

    # --- INÍCIO DOS PASSOS DE DIAGNÓSTICO (OPCIONAIS, mas úteis para confirmação) ---
    - name: Diagnose permissions AFTER all chmod commands
      run: |
        echo "Permissions for esbuild AFTER all chmod commands:"
        ls -la node_modules/@esbuild/linux-x64/bin/esbuild || true
        echo "Permissions for vite binary AFTER all chmod commands:"
        ls -la node_modules/.bin/vite || true
        echo "Permissions for node_modules/.bin/ directory AFTER all chmod commands:"
        ls -la node_modules/.bin/ || true
    # --- FIM DOS PASSOS DE DIAGNÓSTICO ---

    - name: Build React app
      run: npm run build

    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./dist